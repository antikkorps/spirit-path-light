---
export interface Props {
	title: string;
	subtitle: string;
	description: string;
	modalites: string;
	prix: string;
	livrable: string;
	public: string;
	preparation: string[];
	buttonText: string;
	buttonColor: 'primary' | 'secondary' | 'accent';
	imageUrl: string;
	imageAlt: string;
}

const { title, subtitle, description, modalites, prix, livrable, public: publicVisé, preparation, buttonText, buttonColor, imageUrl, imageAlt } = Astro.props;
---

<section class={`py-12 px-8 rounded-2xl bg-gradient-to-br from-${buttonColor}/5 to-${buttonColor}/10 border border-${buttonColor}/20 shadow-lg hover:shadow-xl transition-all duration-500 overflow-hidden`}>
	<div class="max-w-4xl mx-auto">
		<!-- Image immersive -->
		<div class="relative mb-8 rounded-xl overflow-hidden shadow-lg">
			<img src={imageUrl} alt={imageAlt} class="w-full h-64 object-cover object-center" loading="lazy" />
			<div class={`absolute inset-0 bg-gradient-to-t from-${buttonColor}/30 via-transparent to-transparent`}></div>
			<div class="absolute bottom-4 left-4 right-4">
				<div class={`inline-block px-3 py-1 bg-white/90 backdrop-blur-sm rounded-full text-${buttonColor} text-sm font-semibold`}>
					{title}
				</div>
			</div>
		</div>
		<!-- Header avec icône et titre -->
		<div class="text-center mb-8">
			<div class={`w-16 h-16 rounded-full bg-gradient-to-br from-${buttonColor} to-${buttonColor}/80 flex items-center justify-center shadow-lg mx-auto mb-4`}>
				<div class={`w-8 h-8 rounded-full bg-white/90`}></div>
			</div>
			<h3 class={`text-3xl font-display text-${buttonColor} mb-2`}>{title}</h3>
			<div class={`h-1 w-24 bg-gradient-to-r from-${buttonColor} to-${buttonColor}/60 rounded-full mx-auto mb-4`}></div>
			<p class="text-gray-600 italic leading-relaxed text-lg">{subtitle}</p>
		</div>

		<!-- Description mise en valeur -->
		<div class={`bg-white/60 backdrop-blur-sm p-6 rounded-xl mb-8 border-l-4 border-${buttonColor} shadow-inner`}>
			<p class="text-gray-700 leading-relaxed text-base">
				{description}
			</p>
		</div>

		<!-- Détails du service -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
			<div class="space-y-4">
				<div class="flex items-center gap-4 p-4 rounded-lg hover:bg-white/40 transition-colors">
					<div class={`w-12 h-12 rounded-lg bg-gradient-to-br from-${buttonColor}/20 to-${buttonColor}/10 flex items-center justify-center shadow-sm`}>
						<svg class={`w-6 h-6 text-${buttonColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3a1 1 0 011-1h6a1 1 0 011 1v4M8 7h8M8 7l-4 9h16l-4-9"></path>
						</svg>
					</div>
					<div>
						<span class={`font-semibold text-${buttonColor} text-sm uppercase tracking-wide block`}>Modalités</span>
						<p class="text-gray-600 text-sm mt-1">{modalites}</p>
					</div>
				</div>

				<div class="flex items-center gap-4 p-4 rounded-lg hover:bg-white/40 transition-colors">
					<div class={`w-12 h-12 rounded-lg bg-gradient-to-br from-${buttonColor}/20 to-${buttonColor}/10 flex items-center justify-center shadow-sm`}>
						<svg class={`w-6 h-6 text-${buttonColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
						</svg>
					</div>
					<div>
						<span class={`font-semibold text-${buttonColor} text-sm uppercase tracking-wide block`}>Prix</span>
						<p class="text-gray-600 text-sm mt-1">{prix}</p>
					</div>
				</div>
			</div>

			<div class="space-y-4">
				<div class="flex items-center gap-4 p-4 rounded-lg hover:bg-white/40 transition-colors">
					<div class={`w-12 h-12 rounded-lg bg-gradient-to-br from-${buttonColor}/20 to-${buttonColor}/10 flex items-center justify-center shadow-sm`}>
						<svg class={`w-6 h-6 text-${buttonColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
						</svg>
					</div>
					<div>
						<span class={`font-semibold text-${buttonColor} text-sm uppercase tracking-wide block`}>Livrable</span>
						<p class="text-gray-600 text-sm mt-1">{livrable}</p>
					</div>
				</div>

				<div class="flex items-center gap-4 p-4 rounded-lg hover:bg-white/40 transition-colors">
					<div class={`w-12 h-12 rounded-lg bg-gradient-to-br from-${buttonColor}/20 to-${buttonColor}/10 flex items-center justify-center shadow-sm`}>
						<svg class={`w-6 h-6 text-${buttonColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
						</svg>
					</div>
					<div>
						<span class={`font-semibold text-${buttonColor} text-sm uppercase tracking-wide block`}>Public</span>
						<p class="text-gray-600 text-sm mt-1">{publicVisé}</p>
					</div>
				</div>
			</div>
		</div>

		<!-- Préparation -->
		<div class="bg-white/40 backdrop-blur-sm p-6 rounded-xl mb-8">
			<div class="flex items-start gap-4">
				<div class={`w-12 h-12 rounded-lg bg-gradient-to-br from-${buttonColor}/20 to-${buttonColor}/10 flex items-center justify-center shadow-sm mt-1`}>
					<svg class={`w-6 h-6 text-${buttonColor}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
					</svg>
				</div>
				<div class="flex-1">
					<span class={`font-semibold text-${buttonColor} text-sm uppercase tracking-wide block mb-3`}>Préparation</span>
					<div class="text-gray-600 text-sm space-y-2">
						{preparation.map(item => (
							<div class="flex items-center gap-3">
								<div class={`w-2 h-2 rounded-full bg-${buttonColor} flex-shrink-0`}></div>
								<span>{item}</span>
							</div>
						))}
					</div>
				</div>
			</div>
		</div>

		<!-- Bouton centré -->
		<div class="text-center">
			<button class={`btn btn-${buttonColor} btn-wide shadow-lg hover:shadow-xl transition-all duration-300 font-semibold px-8 py-3 text-lg`}>
				{buttonText}
			</button>
		</div>
	</div>
</section>